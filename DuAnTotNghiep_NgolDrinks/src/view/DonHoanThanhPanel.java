/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;


import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class DonHoanThanhPanel extends JPanel {

   private JTable table;
    private DefaultTableModel model;
    private JButton btnThanhToan;

    public DonHoanThanhPanel() {
    setLayout(new BorderLayout());

        // Tạo model bảng
        model = new DefaultTableModel();
        model.addColumn("Mã Đơn Hàng");
        model.addColumn("Ngày đặt hàng");
        model.addColumn("Mã đơn hàng chờ");
        model.addColumn("Trạng thái");

        // Tạo bảng
        table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);

        // Nút Thanh Toán
        btnThanhToan = new JButton("Thanh toán");
        JPanel bottomPanel = new JPanel();
        bottomPanel.add(btnThanhToan);
        add(bottomPanel, BorderLayout.SOUTH);

        // Load dữ liệu
        loadData();

        // Xử lý thanh toán
        btnThanhToan.addActionListener(e -> xuLyThanhToan());
    }

    private void loadData() {
        model.setRowCount(0); // clear dữ liệu cũ

        try (Connection conn = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=NgolDrinks;user=sa;password=123456789;encrypt=false")) {

            String sql = "SELECT Madonhang, Ngaydathang, MadonhangCho, Trangthai FROM Donhang";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                Object[] row = {
                        rs.getInt("Madonhang"),
                        rs.getDate("Ngaydathang"),
                        rs.getInt("MadonhangCho"),
                        rs.getString("Trangthai")
                };
                model.addRow(row);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi load dữ liệu đơn hàng.");
        }
    }

    private void xuLyThanhToan() {
        int selectedRow = table.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một đơn hàng để thanh toán.");
            return;
        }

        int madon = (int) model.getValueAt(selectedRow, 0);

        int confirm = JOptionPane.showConfirmDialog(this,
                "Bạn chắc chắn muốn thanh toán đơn hàng này?",
                "Xác nhận thanh toán",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=NgolDrinks;user=sa;password=123456789;encrypt=false")) {

                String sql = "UPDATE Donhang SET Trangthai = N'Đã Thanh Toán' WHERE Madonhang = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setInt(1, madon);
                int rows = stmt.executeUpdate();

                if (rows > 0) {
                    JOptionPane.showMessageDialog(this, "Thanh toán thành công!");
                    loadData(); // cập nhật lại bảng
                } else {
                    JOptionPane.showMessageDialog(this, "Không thể cập nhật trạng thái.");
                }

            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật đơn hàng.");
            }
        }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
